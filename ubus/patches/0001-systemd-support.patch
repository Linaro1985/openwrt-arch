From 8b45472feb1ecae90f11e86744ba5d4017b82058 Mon Sep 17 00:00:00 2001
From: Maxim Anisimov <maxim.anisimov.ua@gmail.com>
Date: Mon, 20 Sep 2021 09:49:44 +0300
Subject: [PATCH 1/3] systemd support

---
 CMakeLists.txt          | 18 ++++++++++++++++++
 systemd/CMakeLists.txt  |  7 +++++++
 systemd/ubus.service.in |  9 +++++++++
 systemd/ubus.socket.in  |  8 ++++++++
 ubusd_main.c            | 26 ++++++++++++++++++++++++++
 5 files changed, 68 insertions(+)
 create mode 100644 systemd/CMakeLists.txt
 create mode 100644 systemd/ubus.service.in
 create mode 100644 systemd/ubus.socket.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index a65ccbb..fc480b6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,6 +11,7 @@ ADD_DEFINITIONS(-Os -std=gnu99 -g3 -Wmissing-declarations -Wno-unused-parameter)
 
 OPTION(BUILD_LUA "build Lua plugin" ON)
 OPTION(BUILD_EXAMPLES "build examples" ON)
+OPTION(ENABLE_SYSTEMD "systemd support" OFF)
 
 SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "")
 SET(UBUS_UNIX_SOCKET "/var/run/ubus/ubus.sock")
@@ -82,3 +83,20 @@ INSTALL(TARGETS ubusd
 )
 
 INSTALL(FILES ubusmsg.h ubus_common.h libubus.h DESTINATION include)
+
+# FIXME: this works but certainly can be done better:
+SET(UBUSD_BINARY "${CMAKE_INSTALL_PREFIX}/sbin/ubusd")
+
+# do this after the installs so we have the proper paths
+IF(ENABLE_SYSTEMD)
+  INCLUDE(FindPkgConfig)
+  PKG_CHECK_MODULES(SYSTEMD libsystemd REQUIRED)
+
+  SET_PROPERTY(TARGET ubusd APPEND PROPERTY COMPILE_FLAGS "${SYSTEMD_CFLAGS}")
+  SET_PROPERTY(TARGET ubusd APPEND PROPERTY LINK_FLAGS "${SYSTEMD_LDFLAGS}")
+  SET_PROPERTY(TARGET ubusd APPEND PROPERTY INCLUDE_DIRECTORIES ${SYSTEMD_INCLUDE_DIRS})
+  TARGET_LINK_LIBRARIES(ubusd ${SYSTEMD_LIBRARIES})
+  ADD_DEFINITIONS(-DENABLE_SYSTEMD)
+
+  ADD_SUBDIRECTORY(systemd)
+ENDIF()
diff --git a/systemd/CMakeLists.txt b/systemd/CMakeLists.txt
new file mode 100644
index 0000000..54b754b
--- /dev/null
+++ b/systemd/CMakeLists.txt
@@ -0,0 +1,7 @@
+CONFIGURE_FILE(ubus.socket.in ubus.socket)
+CONFIGURE_FILE(ubus.service.in ubus.service)
+
+# Cmakes pkgconfig support is very limited, so for now just hardcode
+SET(SYSTEMD_SYSUNIT_DIR "${SYSTEMD_PREFIX}/lib/systemd/system")
+INSTALL(FILES ${CMAKE_BINARY_DIR}/systemd/ubus.socket ${CMAKE_BINARY_DIR}/systemd/ubus.service
+	DESTINATION ${SYSTEMD_SYSUNIT_DIR})
diff --git a/systemd/ubus.service.in b/systemd/ubus.service.in
new file mode 100644
index 0000000..89a0c00
--- /dev/null
+++ b/systemd/ubus.service.in
@@ -0,0 +1,9 @@
+[Unit]
+Description=OpenWrt micro bus
+Requires=ubus.socket
+
+[Service]
+ExecStart=@UBUSD_BINARY@
+
+[Install]
+WantedBy=multi-user.target
diff --git a/systemd/ubus.socket.in b/systemd/ubus.socket.in
new file mode 100644
index 0000000..364beb7
--- /dev/null
+++ b/systemd/ubus.socket.in
@@ -0,0 +1,8 @@
+[Unit]
+Description=OpenWrt micro bus socket
+
+[Socket]
+ListenStream=@UBUS_UNIX_SOCKET@
+
+[Install]
+WantedBy=sockets.target
diff --git a/ubusd_main.c b/ubusd_main.c
index d454b1a..f08c0b5 100644
--- a/ubusd_main.c
+++ b/ubusd_main.c
@@ -10,6 +10,10 @@
 #ifdef FreeBSD
 #include <sys/param.h>
 #endif
+#ifdef ENABLE_SYSTEMD
+#include <fcntl.h>
+#include <systemd/sd-daemon.h>
+#endif
 #include <string.h>
 #include <syslog.h>
 
@@ -236,8 +240,12 @@ static void mkdir_sockdir()
 int main(int argc, char **argv)
 {
 	const char *ubus_socket = UBUS_UNIX_SOCKET;
+	bool remove_socket = true;
 	int ret = 0;
 	int ch;
+#ifdef ENABLE_SYSTEMD
+	int n_fds;
+#endif
 
 	signal(SIGPIPE, SIG_IGN);
 	signal(SIGHUP, sighup_handler);
@@ -258,6 +266,21 @@ int main(int argc, char **argv)
 		}
 	}
 
+#ifdef ENABLE_SYSTEMD
+	n_fds = sd_listen_fds(1);
+	if (n_fds > 1) {
+	        fprintf(stderr, "Too many file descriptors received.\n");
+	        ret = -1;
+		goto out;
+	} else if (n_fds == 1) {
+	        server_fd.fd = SD_LISTEN_FDS_START + 0;
+		fcntl(server_fd.fd, F_SETFD, fcntl(server_fd.fd, F_GETFD) | FD_CLOEXEC);
+		fcntl(server_fd.fd, F_SETFL, fcntl(server_fd.fd, F_GETFL) | O_NONBLOCK);
+
+		remove_socket = false;
+	} else
+#endif
+	{
 	mkdir_sockdir();
 	unlink(ubus_socket);
 	umask(0111);
@@ -267,10 +290,13 @@ int main(int argc, char **argv)
 		ret = -1;
 		goto out;
 	}
+	}
 	uloop_fd_add(&server_fd, ULOOP_READ | ULOOP_EDGE_TRIGGER);
 	ubusd_acl_load();
 
 	uloop_run();
+
+	if (remove_socket)
 	unlink(ubus_socket);
 
 out:
-- 
2.33.0

